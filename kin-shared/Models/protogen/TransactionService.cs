// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: transaction/v4/transaction_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Kin.Agora.Transaction.V4 {

  /// <summary>Holder for reflection information generated from transaction/v4/transaction_service.proto</summary>
  public static partial class TransactionServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for transaction/v4/transaction_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TransactionServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cih0cmFuc2FjdGlvbi92NC90cmFuc2FjdGlvbl9zZXJ2aWNlLnByb3RvEhhr",
            "aW4uYWdvcmEudHJhbnNhY3Rpb24udjQaFWNvbW1vbi92My9tb2RlbC5wcm90",
            "bxoVY29tbW9uL3Y0L21vZGVsLnByb3RvIhkKF0dldFNlcnZpY2VDb25maWdS",
            "ZXF1ZXN0Is4BChhHZXRTZXJ2aWNlQ29uZmlnUmVzcG9uc2USQAoSc3Vic2lk",
            "aXplcl9hY2NvdW50GAEgASgLMiQua2luLmFnb3JhLmNvbW1vbi52NC5Tb2xh",
            "bmFBY2NvdW50SWQSOwoNdG9rZW5fcHJvZ3JhbRgCIAEoCzIkLmtpbi5hZ29y",
            "YS5jb21tb24udjQuU29sYW5hQWNjb3VudElkEjMKBXRva2VuGAMgASgLMiQu",
            "a2luLmFnb3JhLmNvbW1vbi52NC5Tb2xhbmFBY2NvdW50SWQiHQobR2V0TWlu",
            "aW11bUtpblZlcnNpb25SZXF1ZXN0Ii8KHEdldE1pbmltdW1LaW5WZXJzaW9u",
            "UmVzcG9uc2USDwoHdmVyc2lvbhgBIAEoDSIbChlHZXRSZWNlbnRCbG9ja2hh",
            "c2hSZXF1ZXN0Ik8KGkdldFJlY2VudEJsb2NraGFzaFJlc3BvbnNlEjEKCWJs",
            "b2NraGFzaBgBIAEoCzIeLmtpbi5hZ29yYS5jb21tb24udjQuQmxvY2toYXNo",
            "IjgKKEdldE1pbmltdW1CYWxhbmNlRm9yUmVudEV4ZW1wdGlvblJlcXVlc3QS",
            "DAoEc2l6ZRgBIAEoBCI9CilHZXRNaW5pbXVtQmFsYW5jZUZvclJlbnRFeGVt",
            "cHRpb25SZXNwb25zZRIQCghsYW1wb3J0cxgBIAEoBCLpAQoRR2V0SGlzdG9y",
            "eVJlcXVlc3QSOAoKYWNjb3VudF9pZBgBIAEoCzIkLmtpbi5hZ29yYS5jb21t",
            "b24udjQuU29sYW5hQWNjb3VudElkEjAKBmN1cnNvchgCIAEoCzIgLmtpbi5h",
            "Z29yYS50cmFuc2FjdGlvbi52NC5DdXJzb3ISSAoJZGlyZWN0aW9uGAMgASgO",
            "MjUua2luLmFnb3JhLnRyYW5zYWN0aW9uLnY0LkdldEhpc3RvcnlSZXF1ZXN0",
            "LkRpcmVjdGlvbiIeCglEaXJlY3Rpb24SBwoDQVNDEAASCAoEREVTQxABIrAB",
            "ChJHZXRIaXN0b3J5UmVzcG9uc2USQwoGcmVzdWx0GAEgASgOMjMua2luLmFn",
            "b3JhLnRyYW5zYWN0aW9uLnY0LkdldEhpc3RvcnlSZXNwb25zZS5SZXN1bHQS",
            "NAoFaXRlbXMYAiADKAsyJS5raW4uYWdvcmEudHJhbnNhY3Rpb24udjQuSGlz",
            "dG9yeUl0ZW0iHwoGUmVzdWx0EgYKAk9LEAASDQoJTk9UX0ZPVU5EEAEi0QEK",
            "GFN1Ym1pdFRyYW5zYWN0aW9uUmVxdWVzdBI1Cgt0cmFuc2FjdGlvbhgBIAEo",
            "CzIgLmtpbi5hZ29yYS5jb21tb24udjQuVHJhbnNhY3Rpb24SNgoMaW52b2lj",
            "ZV9saXN0GAIgASgLMiAua2luLmFnb3JhLmNvbW1vbi52My5JbnZvaWNlTGlz",
            "dBIzCgpjb21taXRtZW50GAMgASgOMh8ua2luLmFnb3JhLmNvbW1vbi52NC5D",
            "b21taXRtZW50EhEKCWRlZHVwZV9pZBgEIAEoDCKMAwoZU3VibWl0VHJhbnNh",
            "Y3Rpb25SZXNwb25zZRJKCgZyZXN1bHQYASABKA4yOi5raW4uYWdvcmEudHJh",
            "bnNhY3Rpb24udjQuU3VibWl0VHJhbnNhY3Rpb25SZXNwb25zZS5SZXN1bHQS",
            "PAoJc2lnbmF0dXJlGAIgASgLMikua2luLmFnb3JhLmNvbW1vbi52NC5UcmFu",
            "c2FjdGlvblNpZ25hdHVyZRJAChF0cmFuc2FjdGlvbl9lcnJvchgDIAEoCzIl",
            "Lmtpbi5hZ29yYS5jb21tb24udjQuVHJhbnNhY3Rpb25FcnJvchI5Cg5pbnZv",
            "aWNlX2Vycm9ycxgEIAMoCzIhLmtpbi5hZ29yYS5jb21tb24udjMuSW52b2lj",
            "ZUVycm9yImgKBlJlc3VsdBIGCgJPSxAAEhUKEUFMUkVBRFlfU1VCTUlUVEVE",
            "EAESCgoGRkFJTEVEEAISDAoIUkVKRUNURUQQAxIRCg1JTlZPSUNFX0VSUk9S",
            "EAQSEgoOUEFZRVJfUkVRVUlSRUQQBSKIAQoVR2V0VHJhbnNhY3Rpb25SZXF1",
            "ZXN0EjoKDnRyYW5zYWN0aW9uX2lkGAEgASgLMiIua2luLmFnb3JhLmNvbW1v",
            "bi52NC5UcmFuc2FjdGlvbklkEjMKCmNvbW1pdG1lbnQYAiABKA4yHy5raW4u",
            "YWdvcmEuY29tbW9uLnY0LkNvbW1pdG1lbnQi9QEKFkdldFRyYW5zYWN0aW9u",
            "UmVzcG9uc2USRQoFc3RhdGUYASABKA4yNi5raW4uYWdvcmEudHJhbnNhY3Rp",
            "b24udjQuR2V0VHJhbnNhY3Rpb25SZXNwb25zZS5TdGF0ZRIMCgRzbG90GAIg",
            "ASgEEhUKDWNvbmZpcm1hdGlvbnMYAyABKA0SMwoEaXRlbRgEIAEoCzIlLmtp",
            "bi5hZ29yYS50cmFuc2FjdGlvbi52NC5IaXN0b3J5SXRlbSI6CgVTdGF0ZRIL",
            "CgdVTktOT1dOEAASCwoHU1VDQ0VTUxABEgoKBkZBSUxFRBACEgsKB1BFTkRJ",
            "TkcQAyLtBAoLSGlzdG9yeUl0ZW0SOgoOdHJhbnNhY3Rpb25faWQYASABKAsy",
            "Ii5raW4uYWdvcmEuY29tbW9uLnY0LlRyYW5zYWN0aW9uSWQSMAoGY3Vyc29y",
            "GAIgASgLMiAua2luLmFnb3JhLnRyYW5zYWN0aW9uLnY0LkN1cnNvchI+ChJz",
            "b2xhbmFfdHJhbnNhY3Rpb24YAyABKAsyIC5raW4uYWdvcmEuY29tbW9uLnY0",
            "LlRyYW5zYWN0aW9uSAASRgoTc3RlbGxhcl90cmFuc2FjdGlvbhgEIAEoCzIn",
            "Lmtpbi5hZ29yYS5jb21tb24udjQuU3RlbGxhclRyYW5zYWN0aW9uSAASQAoR",
            "dHJhbnNhY3Rpb25fZXJyb3IYBSABKAsyJS5raW4uYWdvcmEuY29tbW9uLnY0",
            "LlRyYW5zYWN0aW9uRXJyb3ISPwoIcGF5bWVudHMYBiADKAsyLS5raW4uYWdv",
            "cmEudHJhbnNhY3Rpb24udjQuSGlzdG9yeUl0ZW0uUGF5bWVudBI2CgxpbnZv",
            "aWNlX2xpc3QYByABKAsyIC5raW4uYWdvcmEuY29tbW9uLnYzLkludm9pY2VM",
            "aXN0GpkBCgdQYXltZW50EjQKBnNvdXJjZRgBIAEoCzIkLmtpbi5hZ29yYS5j",
            "b21tb24udjQuU29sYW5hQWNjb3VudElkEjkKC2Rlc3RpbmF0aW9uGAIgASgL",
            "MiQua2luLmFnb3JhLmNvbW1vbi52NC5Tb2xhbmFBY2NvdW50SWQSDgoGYW1v",
            "dW50GAMgASgDEg0KBWluZGV4GAQgASgNQhEKD3Jhd190cmFuc2FjdGlvbiIX",
            "CgZDdXJzb3ISDQoFdmFsdWUYASABKAwynAcKC1RyYW5zYWN0aW9uEnkKEEdl",
            "dFNlcnZpY2VDb25maWcSMS5raW4uYWdvcmEudHJhbnNhY3Rpb24udjQuR2V0",
            "U2VydmljZUNvbmZpZ1JlcXVlc3QaMi5raW4uYWdvcmEudHJhbnNhY3Rpb24u",
            "djQuR2V0U2VydmljZUNvbmZpZ1Jlc3BvbnNlEoUBChRHZXRNaW5pbXVtS2lu",
            "VmVyc2lvbhI1Lmtpbi5hZ29yYS50cmFuc2FjdGlvbi52NC5HZXRNaW5pbXVt",
            "S2luVmVyc2lvblJlcXVlc3QaNi5raW4uYWdvcmEudHJhbnNhY3Rpb24udjQu",
            "R2V0TWluaW11bUtpblZlcnNpb25SZXNwb25zZRJ/ChJHZXRSZWNlbnRCbG9j",
            "a2hhc2gSMy5raW4uYWdvcmEudHJhbnNhY3Rpb24udjQuR2V0UmVjZW50Qmxv",
            "Y2toYXNoUmVxdWVzdBo0Lmtpbi5hZ29yYS50cmFuc2FjdGlvbi52NC5HZXRS",
            "ZWNlbnRCbG9ja2hhc2hSZXNwb25zZRKsAQohR2V0TWluaW11bUJhbGFuY2VG",
            "b3JSZW50RXhlbXB0aW9uEkIua2luLmFnb3JhLnRyYW5zYWN0aW9uLnY0Lkdl",
            "dE1pbmltdW1CYWxhbmNlRm9yUmVudEV4ZW1wdGlvblJlcXVlc3QaQy5raW4u",
            "YWdvcmEudHJhbnNhY3Rpb24udjQuR2V0TWluaW11bUJhbGFuY2VGb3JSZW50",
            "RXhlbXB0aW9uUmVzcG9uc2USZwoKR2V0SGlzdG9yeRIrLmtpbi5hZ29yYS50",
            "cmFuc2FjdGlvbi52NC5HZXRIaXN0b3J5UmVxdWVzdBosLmtpbi5hZ29yYS50",
            "cmFuc2FjdGlvbi52NC5HZXRIaXN0b3J5UmVzcG9uc2USfAoRU3VibWl0VHJh",
            "bnNhY3Rpb24SMi5raW4uYWdvcmEudHJhbnNhY3Rpb24udjQuU3VibWl0VHJh",
            "bnNhY3Rpb25SZXF1ZXN0GjMua2luLmFnb3JhLnRyYW5zYWN0aW9uLnY0LlN1",
            "Ym1pdFRyYW5zYWN0aW9uUmVzcG9uc2UScwoOR2V0VHJhbnNhY3Rpb24SLy5r",
            "aW4uYWdvcmEudHJhbnNhY3Rpb24udjQuR2V0VHJhbnNhY3Rpb25SZXF1ZXN0",
            "GjAua2luLmFnb3JhLnRyYW5zYWN0aW9uLnY0LkdldFRyYW5zYWN0aW9uUmVz",
            "cG9uc2VChQEKIG9yZy5raW4uYWdvcmEuZ2VuLnRyYW5zYWN0aW9uLnY0Wk5n",
            "aXRodWIuY29tL2tpbmVjb3N5c3RlbS9hZ29yYS1hcGktaW50ZXJuYWwvZ2Vu",
            "cHJvdG8vdHJhbnNhY3Rpb24vdjQ7dHJhbnNhY3Rpb26iAhBBUEJUcmFuc2Fj",
            "dGlvblY0YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Kin.Agora.Common.V3.ModelReflection.Descriptor, global::Kin.Agora.Common.V4.ModelReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Transaction.V4.GetServiceConfigRequest), global::Kin.Agora.Transaction.V4.GetServiceConfigRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Transaction.V4.GetServiceConfigResponse), global::Kin.Agora.Transaction.V4.GetServiceConfigResponse.Parser, new[]{ "SubsidizerAccount", "TokenProgram", "Token" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Transaction.V4.GetMinimumKinVersionRequest), global::Kin.Agora.Transaction.V4.GetMinimumKinVersionRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Transaction.V4.GetMinimumKinVersionResponse), global::Kin.Agora.Transaction.V4.GetMinimumKinVersionResponse.Parser, new[]{ "Version" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Transaction.V4.GetRecentBlockhashRequest), global::Kin.Agora.Transaction.V4.GetRecentBlockhashRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Transaction.V4.GetRecentBlockhashResponse), global::Kin.Agora.Transaction.V4.GetRecentBlockhashResponse.Parser, new[]{ "Blockhash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Transaction.V4.GetMinimumBalanceForRentExemptionRequest), global::Kin.Agora.Transaction.V4.GetMinimumBalanceForRentExemptionRequest.Parser, new[]{ "Size" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Transaction.V4.GetMinimumBalanceForRentExemptionResponse), global::Kin.Agora.Transaction.V4.GetMinimumBalanceForRentExemptionResponse.Parser, new[]{ "Lamports" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Transaction.V4.GetHistoryRequest), global::Kin.Agora.Transaction.V4.GetHistoryRequest.Parser, new[]{ "AccountId", "Cursor", "Direction" }, null, new[]{ typeof(global::Kin.Agora.Transaction.V4.GetHistoryRequest.Types.Direction) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Transaction.V4.GetHistoryResponse), global::Kin.Agora.Transaction.V4.GetHistoryResponse.Parser, new[]{ "Result", "Items" }, null, new[]{ typeof(global::Kin.Agora.Transaction.V4.GetHistoryResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Transaction.V4.SubmitTransactionRequest), global::Kin.Agora.Transaction.V4.SubmitTransactionRequest.Parser, new[]{ "Transaction", "InvoiceList", "Commitment", "DedupeId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Transaction.V4.SubmitTransactionResponse), global::Kin.Agora.Transaction.V4.SubmitTransactionResponse.Parser, new[]{ "Result", "Signature", "TransactionError", "InvoiceErrors" }, null, new[]{ typeof(global::Kin.Agora.Transaction.V4.SubmitTransactionResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Transaction.V4.GetTransactionRequest), global::Kin.Agora.Transaction.V4.GetTransactionRequest.Parser, new[]{ "TransactionId", "Commitment" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Transaction.V4.GetTransactionResponse), global::Kin.Agora.Transaction.V4.GetTransactionResponse.Parser, new[]{ "State", "Slot", "Confirmations", "Item" }, null, new[]{ typeof(global::Kin.Agora.Transaction.V4.GetTransactionResponse.Types.State) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Transaction.V4.HistoryItem), global::Kin.Agora.Transaction.V4.HistoryItem.Parser, new[]{ "TransactionId", "Cursor", "SolanaTransaction", "StellarTransaction", "TransactionError", "Payments", "InvoiceList" }, new[]{ "RawTransaction" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Transaction.V4.HistoryItem.Types.Payment), global::Kin.Agora.Transaction.V4.HistoryItem.Types.Payment.Parser, new[]{ "Source", "Destination", "Amount", "Index" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Transaction.V4.Cursor), global::Kin.Agora.Transaction.V4.Cursor.Parser, new[]{ "Value" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetServiceConfigRequest : pb::IMessage<GetServiceConfigRequest> {
    private static readonly pb::MessageParser<GetServiceConfigRequest> _parser = new pb::MessageParser<GetServiceConfigRequest>(() => new GetServiceConfigRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetServiceConfigRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kin.Agora.Transaction.V4.TransactionServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetServiceConfigRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetServiceConfigRequest(GetServiceConfigRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetServiceConfigRequest Clone() {
      return new GetServiceConfigRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetServiceConfigRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetServiceConfigRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetServiceConfigRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetServiceConfigResponse : pb::IMessage<GetServiceConfigResponse> {
    private static readonly pb::MessageParser<GetServiceConfigResponse> _parser = new pb::MessageParser<GetServiceConfigResponse>(() => new GetServiceConfigResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetServiceConfigResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kin.Agora.Transaction.V4.TransactionServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetServiceConfigResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetServiceConfigResponse(GetServiceConfigResponse other) : this() {
      subsidizerAccount_ = other.subsidizerAccount_ != null ? other.subsidizerAccount_.Clone() : null;
      tokenProgram_ = other.tokenProgram_ != null ? other.tokenProgram_.Clone() : null;
      token_ = other.token_ != null ? other.token_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetServiceConfigResponse Clone() {
      return new GetServiceConfigResponse(this);
    }

    /// <summary>Field number for the "subsidizer_account" field.</summary>
    public const int SubsidizerAccountFieldNumber = 1;
    private global::Kin.Agora.Common.V4.SolanaAccountId subsidizerAccount_;
    /// <summary>
    /// The public key of the account that the service will use to sign transactions for funding.
    /// If not specified, the service is _not_ configured to fund transactions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Common.V4.SolanaAccountId SubsidizerAccount {
      get { return subsidizerAccount_; }
      set {
        subsidizerAccount_ = value;
      }
    }

    /// <summary>Field number for the "token_program" field.</summary>
    public const int TokenProgramFieldNumber = 2;
    private global::Kin.Agora.Common.V4.SolanaAccountId tokenProgram_;
    /// <summary>
    /// note: after release these values cannot change, and will be static per environment.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Common.V4.SolanaAccountId TokenProgram {
      get { return tokenProgram_; }
      set {
        tokenProgram_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 3;
    private global::Kin.Agora.Common.V4.SolanaAccountId token_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Common.V4.SolanaAccountId Token {
      get { return token_; }
      set {
        token_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetServiceConfigResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetServiceConfigResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SubsidizerAccount, other.SubsidizerAccount)) return false;
      if (!object.Equals(TokenProgram, other.TokenProgram)) return false;
      if (!object.Equals(Token, other.Token)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (subsidizerAccount_ != null) hash ^= SubsidizerAccount.GetHashCode();
      if (tokenProgram_ != null) hash ^= TokenProgram.GetHashCode();
      if (token_ != null) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (subsidizerAccount_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SubsidizerAccount);
      }
      if (tokenProgram_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TokenProgram);
      }
      if (token_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (subsidizerAccount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubsidizerAccount);
      }
      if (tokenProgram_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokenProgram);
      }
      if (token_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetServiceConfigResponse other) {
      if (other == null) {
        return;
      }
      if (other.subsidizerAccount_ != null) {
        if (subsidizerAccount_ == null) {
          subsidizerAccount_ = new global::Kin.Agora.Common.V4.SolanaAccountId();
        }
        SubsidizerAccount.MergeFrom(other.SubsidizerAccount);
      }
      if (other.tokenProgram_ != null) {
        if (tokenProgram_ == null) {
          tokenProgram_ = new global::Kin.Agora.Common.V4.SolanaAccountId();
        }
        TokenProgram.MergeFrom(other.TokenProgram);
      }
      if (other.token_ != null) {
        if (token_ == null) {
          token_ = new global::Kin.Agora.Common.V4.SolanaAccountId();
        }
        Token.MergeFrom(other.Token);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (subsidizerAccount_ == null) {
              subsidizerAccount_ = new global::Kin.Agora.Common.V4.SolanaAccountId();
            }
            input.ReadMessage(subsidizerAccount_);
            break;
          }
          case 18: {
            if (tokenProgram_ == null) {
              tokenProgram_ = new global::Kin.Agora.Common.V4.SolanaAccountId();
            }
            input.ReadMessage(tokenProgram_);
            break;
          }
          case 26: {
            if (token_ == null) {
              token_ = new global::Kin.Agora.Common.V4.SolanaAccountId();
            }
            input.ReadMessage(token_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMinimumKinVersionRequest : pb::IMessage<GetMinimumKinVersionRequest> {
    private static readonly pb::MessageParser<GetMinimumKinVersionRequest> _parser = new pb::MessageParser<GetMinimumKinVersionRequest>(() => new GetMinimumKinVersionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMinimumKinVersionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kin.Agora.Transaction.V4.TransactionServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMinimumKinVersionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMinimumKinVersionRequest(GetMinimumKinVersionRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMinimumKinVersionRequest Clone() {
      return new GetMinimumKinVersionRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMinimumKinVersionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMinimumKinVersionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMinimumKinVersionRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetMinimumKinVersionResponse : pb::IMessage<GetMinimumKinVersionResponse> {
    private static readonly pb::MessageParser<GetMinimumKinVersionResponse> _parser = new pb::MessageParser<GetMinimumKinVersionResponse>(() => new GetMinimumKinVersionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMinimumKinVersionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kin.Agora.Transaction.V4.TransactionServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMinimumKinVersionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMinimumKinVersionResponse(GetMinimumKinVersionResponse other) : this() {
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMinimumKinVersionResponse Clone() {
      return new GetMinimumKinVersionResponse(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private uint version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMinimumKinVersionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMinimumKinVersionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMinimumKinVersionResponse other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetRecentBlockhashRequest : pb::IMessage<GetRecentBlockhashRequest> {
    private static readonly pb::MessageParser<GetRecentBlockhashRequest> _parser = new pb::MessageParser<GetRecentBlockhashRequest>(() => new GetRecentBlockhashRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRecentBlockhashRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kin.Agora.Transaction.V4.TransactionServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRecentBlockhashRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRecentBlockhashRequest(GetRecentBlockhashRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRecentBlockhashRequest Clone() {
      return new GetRecentBlockhashRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRecentBlockhashRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRecentBlockhashRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRecentBlockhashRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetRecentBlockhashResponse : pb::IMessage<GetRecentBlockhashResponse> {
    private static readonly pb::MessageParser<GetRecentBlockhashResponse> _parser = new pb::MessageParser<GetRecentBlockhashResponse>(() => new GetRecentBlockhashResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRecentBlockhashResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kin.Agora.Transaction.V4.TransactionServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRecentBlockhashResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRecentBlockhashResponse(GetRecentBlockhashResponse other) : this() {
      blockhash_ = other.blockhash_ != null ? other.blockhash_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRecentBlockhashResponse Clone() {
      return new GetRecentBlockhashResponse(this);
    }

    /// <summary>Field number for the "blockhash" field.</summary>
    public const int BlockhashFieldNumber = 1;
    private global::Kin.Agora.Common.V4.Blockhash blockhash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Common.V4.Blockhash Blockhash {
      get { return blockhash_; }
      set {
        blockhash_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRecentBlockhashResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRecentBlockhashResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Blockhash, other.Blockhash)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (blockhash_ != null) hash ^= Blockhash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (blockhash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Blockhash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (blockhash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Blockhash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRecentBlockhashResponse other) {
      if (other == null) {
        return;
      }
      if (other.blockhash_ != null) {
        if (blockhash_ == null) {
          blockhash_ = new global::Kin.Agora.Common.V4.Blockhash();
        }
        Blockhash.MergeFrom(other.Blockhash);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (blockhash_ == null) {
              blockhash_ = new global::Kin.Agora.Common.V4.Blockhash();
            }
            input.ReadMessage(blockhash_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMinimumBalanceForRentExemptionRequest : pb::IMessage<GetMinimumBalanceForRentExemptionRequest> {
    private static readonly pb::MessageParser<GetMinimumBalanceForRentExemptionRequest> _parser = new pb::MessageParser<GetMinimumBalanceForRentExemptionRequest>(() => new GetMinimumBalanceForRentExemptionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMinimumBalanceForRentExemptionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kin.Agora.Transaction.V4.TransactionServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMinimumBalanceForRentExemptionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMinimumBalanceForRentExemptionRequest(GetMinimumBalanceForRentExemptionRequest other) : this() {
      size_ = other.size_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMinimumBalanceForRentExemptionRequest Clone() {
      return new GetMinimumBalanceForRentExemptionRequest(this);
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 1;
    private ulong size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMinimumBalanceForRentExemptionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMinimumBalanceForRentExemptionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Size != other.Size) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Size != 0UL) hash ^= Size.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Size != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Size);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Size != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Size);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMinimumBalanceForRentExemptionRequest other) {
      if (other == null) {
        return;
      }
      if (other.Size != 0UL) {
        Size = other.Size;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Size = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMinimumBalanceForRentExemptionResponse : pb::IMessage<GetMinimumBalanceForRentExemptionResponse> {
    private static readonly pb::MessageParser<GetMinimumBalanceForRentExemptionResponse> _parser = new pb::MessageParser<GetMinimumBalanceForRentExemptionResponse>(() => new GetMinimumBalanceForRentExemptionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMinimumBalanceForRentExemptionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kin.Agora.Transaction.V4.TransactionServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMinimumBalanceForRentExemptionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMinimumBalanceForRentExemptionResponse(GetMinimumBalanceForRentExemptionResponse other) : this() {
      lamports_ = other.lamports_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMinimumBalanceForRentExemptionResponse Clone() {
      return new GetMinimumBalanceForRentExemptionResponse(this);
    }

    /// <summary>Field number for the "lamports" field.</summary>
    public const int LamportsFieldNumber = 1;
    private ulong lamports_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Lamports {
      get { return lamports_; }
      set {
        lamports_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMinimumBalanceForRentExemptionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMinimumBalanceForRentExemptionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Lamports != other.Lamports) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Lamports != 0UL) hash ^= Lamports.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Lamports != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Lamports);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Lamports != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Lamports);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMinimumBalanceForRentExemptionResponse other) {
      if (other == null) {
        return;
      }
      if (other.Lamports != 0UL) {
        Lamports = other.Lamports;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Lamports = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetHistoryRequest : pb::IMessage<GetHistoryRequest> {
    private static readonly pb::MessageParser<GetHistoryRequest> _parser = new pb::MessageParser<GetHistoryRequest>(() => new GetHistoryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetHistoryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kin.Agora.Transaction.V4.TransactionServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHistoryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHistoryRequest(GetHistoryRequest other) : this() {
      accountId_ = other.accountId_ != null ? other.accountId_.Clone() : null;
      cursor_ = other.cursor_ != null ? other.cursor_.Clone() : null;
      direction_ = other.direction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHistoryRequest Clone() {
      return new GetHistoryRequest(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private global::Kin.Agora.Common.V4.SolanaAccountId accountId_;
    /// <summary>
    /// Account to get history for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Common.V4.SolanaAccountId AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }

    /// <summary>Field number for the "cursor" field.</summary>
    public const int CursorFieldNumber = 2;
    private global::Kin.Agora.Transaction.V4.Cursor cursor_;
    /// <summary>
    /// An optional history cursor indicating where in
    /// the history to 'resume' from.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Transaction.V4.Cursor Cursor {
      get { return cursor_; }
      set {
        cursor_ = value;
      }
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 3;
    private global::Kin.Agora.Transaction.V4.GetHistoryRequest.Types.Direction direction_ = 0;
    /// <summary>
    /// The order in which to return history items from
    /// the cursor.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Transaction.V4.GetHistoryRequest.Types.Direction Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetHistoryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetHistoryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AccountId, other.AccountId)) return false;
      if (!object.Equals(Cursor, other.Cursor)) return false;
      if (Direction != other.Direction) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (accountId_ != null) hash ^= AccountId.GetHashCode();
      if (cursor_ != null) hash ^= Cursor.GetHashCode();
      if (Direction != 0) hash ^= Direction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (accountId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AccountId);
      }
      if (cursor_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Cursor);
      }
      if (Direction != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Direction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (accountId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountId);
      }
      if (cursor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cursor);
      }
      if (Direction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Direction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetHistoryRequest other) {
      if (other == null) {
        return;
      }
      if (other.accountId_ != null) {
        if (accountId_ == null) {
          accountId_ = new global::Kin.Agora.Common.V4.SolanaAccountId();
        }
        AccountId.MergeFrom(other.AccountId);
      }
      if (other.cursor_ != null) {
        if (cursor_ == null) {
          cursor_ = new global::Kin.Agora.Transaction.V4.Cursor();
        }
        Cursor.MergeFrom(other.Cursor);
      }
      if (other.Direction != 0) {
        Direction = other.Direction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (accountId_ == null) {
              accountId_ = new global::Kin.Agora.Common.V4.SolanaAccountId();
            }
            input.ReadMessage(accountId_);
            break;
          }
          case 18: {
            if (cursor_ == null) {
              cursor_ = new global::Kin.Agora.Transaction.V4.Cursor();
            }
            input.ReadMessage(cursor_);
            break;
          }
          case 24: {
            direction_ = (global::Kin.Agora.Transaction.V4.GetHistoryRequest.Types.Direction) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetHistoryRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Direction {
        /// <summary>
        /// ASC direction returns all history items in
        /// ascending (based on chain order) from the cursor.
        /// </summary>
        [pbr::OriginalName("ASC")] Asc = 0,
        /// <summary>
        /// DESC direction returns all history items in
        /// descending (based on chain order) from _before_ the cursor.
        /// </summary>
        [pbr::OriginalName("DESC")] Desc = 1,
      }

    }
    #endregion

  }

  public sealed partial class GetHistoryResponse : pb::IMessage<GetHistoryResponse> {
    private static readonly pb::MessageParser<GetHistoryResponse> _parser = new pb::MessageParser<GetHistoryResponse>(() => new GetHistoryResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetHistoryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kin.Agora.Transaction.V4.TransactionServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHistoryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHistoryResponse(GetHistoryResponse other) : this() {
      result_ = other.result_;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHistoryResponse Clone() {
      return new GetHistoryResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::Kin.Agora.Transaction.V4.GetHistoryResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Transaction.V4.GetHistoryResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Kin.Agora.Transaction.V4.HistoryItem> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Kin.Agora.Transaction.V4.HistoryItem.Parser);
    private readonly pbc::RepeatedField<global::Kin.Agora.Transaction.V4.HistoryItem> items_ = new pbc::RepeatedField<global::Kin.Agora.Transaction.V4.HistoryItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Kin.Agora.Transaction.V4.HistoryItem> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetHistoryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetHistoryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetHistoryResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            result_ = (global::Kin.Agora.Transaction.V4.GetHistoryResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetHistoryResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("OK")] Ok = 0,
        [pbr::OriginalName("NOT_FOUND")] NotFound = 1,
      }

    }
    #endregion

  }

  public sealed partial class SubmitTransactionRequest : pb::IMessage<SubmitTransactionRequest> {
    private static readonly pb::MessageParser<SubmitTransactionRequest> _parser = new pb::MessageParser<SubmitTransactionRequest>(() => new SubmitTransactionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmitTransactionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kin.Agora.Transaction.V4.TransactionServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitTransactionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitTransactionRequest(SubmitTransactionRequest other) : this() {
      transaction_ = other.transaction_ != null ? other.transaction_.Clone() : null;
      invoiceList_ = other.invoiceList_ != null ? other.invoiceList_.Clone() : null;
      commitment_ = other.commitment_;
      dedupeId_ = other.dedupeId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitTransactionRequest Clone() {
      return new SubmitTransactionRequest(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 1;
    private global::Kin.Agora.Common.V4.Transaction transaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Common.V4.Transaction Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    /// <summary>Field number for the "invoice_list" field.</summary>
    public const int InvoiceListFieldNumber = 2;
    private global::Kin.Agora.Common.V3.InvoiceList invoiceList_;
    /// <summary>
    /// An optional invoice list associating each operation with an invoice.
    ///
    /// If an invoice list is included, it is expected that the foreign key in
    /// the transaction memo is the SHA-224 hash of the serialized invoice list.
    ///
    /// The invoice list will be included in webhook calls for the application the
    /// transaction pertains to (as specified by the memo app index).
    ///
    /// The submitted invoice data will only be available for retrieval from the service it
    /// was submitted to and not directly from the blockchain nor any other deployments of
    /// the service.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Common.V3.InvoiceList InvoiceList {
      get { return invoiceList_; }
      set {
        invoiceList_ = value;
      }
    }

    /// <summary>Field number for the "commitment" field.</summary>
    public const int CommitmentFieldNumber = 3;
    private global::Kin.Agora.Common.V4.Commitment commitment_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Common.V4.Commitment Commitment {
      get { return commitment_; }
      set {
        commitment_ = value;
      }
    }

    /// <summary>Field number for the "dedupe_id" field.</summary>
    public const int DedupeIdFieldNumber = 4;
    private pb::ByteString dedupeId_ = pb::ByteString.Empty;
    /// <summary>
    /// dedupe_id specifies an identifier that this transaction is associated with.
    ///
    /// If the service has already seen this ID, it will return the previous transaction
    /// status.
    ///
    /// The motivator for this identifier is that SDKs that retry at a higher level do
    /// not have access to the Blockhash information that the underlying SDK used in
    /// certain circumstances. Notably, in time out related cases, it is possible that
    /// the transaction was submitted, but the (SDK) caller will not be able to infer
    /// the signature.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DedupeId {
      get { return dedupeId_; }
      set {
        dedupeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmitTransactionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmitTransactionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Transaction, other.Transaction)) return false;
      if (!object.Equals(InvoiceList, other.InvoiceList)) return false;
      if (Commitment != other.Commitment) return false;
      if (DedupeId != other.DedupeId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (invoiceList_ != null) hash ^= InvoiceList.GetHashCode();
      if (Commitment != 0) hash ^= Commitment.GetHashCode();
      if (DedupeId.Length != 0) hash ^= DedupeId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (transaction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Transaction);
      }
      if (invoiceList_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InvoiceList);
      }
      if (Commitment != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Commitment);
      }
      if (DedupeId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(DedupeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (invoiceList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InvoiceList);
      }
      if (Commitment != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Commitment);
      }
      if (DedupeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DedupeId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmitTransactionRequest other) {
      if (other == null) {
        return;
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          transaction_ = new global::Kin.Agora.Common.V4.Transaction();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      if (other.invoiceList_ != null) {
        if (invoiceList_ == null) {
          invoiceList_ = new global::Kin.Agora.Common.V3.InvoiceList();
        }
        InvoiceList.MergeFrom(other.InvoiceList);
      }
      if (other.Commitment != 0) {
        Commitment = other.Commitment;
      }
      if (other.DedupeId.Length != 0) {
        DedupeId = other.DedupeId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (transaction_ == null) {
              transaction_ = new global::Kin.Agora.Common.V4.Transaction();
            }
            input.ReadMessage(transaction_);
            break;
          }
          case 18: {
            if (invoiceList_ == null) {
              invoiceList_ = new global::Kin.Agora.Common.V3.InvoiceList();
            }
            input.ReadMessage(invoiceList_);
            break;
          }
          case 24: {
            commitment_ = (global::Kin.Agora.Common.V4.Commitment) input.ReadEnum();
            break;
          }
          case 34: {
            DedupeId = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubmitTransactionResponse : pb::IMessage<SubmitTransactionResponse> {
    private static readonly pb::MessageParser<SubmitTransactionResponse> _parser = new pb::MessageParser<SubmitTransactionResponse>(() => new SubmitTransactionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmitTransactionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kin.Agora.Transaction.V4.TransactionServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitTransactionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitTransactionResponse(SubmitTransactionResponse other) : this() {
      result_ = other.result_;
      signature_ = other.signature_ != null ? other.signature_.Clone() : null;
      transactionError_ = other.transactionError_ != null ? other.transactionError_.Clone() : null;
      invoiceErrors_ = other.invoiceErrors_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitTransactionResponse Clone() {
      return new SubmitTransactionResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::Kin.Agora.Transaction.V4.SubmitTransactionResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Transaction.V4.SubmitTransactionResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private global::Kin.Agora.Common.V4.TransactionSignature signature_;
    /// <summary>
    /// The signature of the transaction.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Common.V4.TransactionSignature Signature {
      get { return signature_; }
      set {
        signature_ = value;
      }
    }

    /// <summary>Field number for the "transaction_error" field.</summary>
    public const int TransactionErrorFieldNumber = 3;
    private global::Kin.Agora.Common.V4.TransactionError transactionError_;
    /// <summary>
    /// Present when result = FAILED.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Common.V4.TransactionError TransactionError {
      get { return transactionError_; }
      set {
        transactionError_ = value;
      }
    }

    /// <summary>Field number for the "invoice_errors" field.</summary>
    public const int InvoiceErrorsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Kin.Agora.Common.V3.InvoiceError> _repeated_invoiceErrors_codec
        = pb::FieldCodec.ForMessage(34, global::Kin.Agora.Common.V3.InvoiceError.Parser);
    private readonly pbc::RepeatedField<global::Kin.Agora.Common.V3.InvoiceError> invoiceErrors_ = new pbc::RepeatedField<global::Kin.Agora.Common.V3.InvoiceError>();
    /// <summary>
    /// Present when result = INVOICE_ERROR.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Kin.Agora.Common.V3.InvoiceError> InvoiceErrors {
      get { return invoiceErrors_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmitTransactionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmitTransactionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(Signature, other.Signature)) return false;
      if (!object.Equals(TransactionError, other.TransactionError)) return false;
      if(!invoiceErrors_.Equals(other.invoiceErrors_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (signature_ != null) hash ^= Signature.GetHashCode();
      if (transactionError_ != null) hash ^= TransactionError.GetHashCode();
      hash ^= invoiceErrors_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (signature_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Signature);
      }
      if (transactionError_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TransactionError);
      }
      invoiceErrors_.WriteTo(output, _repeated_invoiceErrors_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (signature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Signature);
      }
      if (transactionError_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransactionError);
      }
      size += invoiceErrors_.CalculateSize(_repeated_invoiceErrors_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmitTransactionResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.signature_ != null) {
        if (signature_ == null) {
          signature_ = new global::Kin.Agora.Common.V4.TransactionSignature();
        }
        Signature.MergeFrom(other.Signature);
      }
      if (other.transactionError_ != null) {
        if (transactionError_ == null) {
          transactionError_ = new global::Kin.Agora.Common.V4.TransactionError();
        }
        TransactionError.MergeFrom(other.TransactionError);
      }
      invoiceErrors_.Add(other.invoiceErrors_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            result_ = (global::Kin.Agora.Transaction.V4.SubmitTransactionResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            if (signature_ == null) {
              signature_ = new global::Kin.Agora.Common.V4.TransactionSignature();
            }
            input.ReadMessage(signature_);
            break;
          }
          case 26: {
            if (transactionError_ == null) {
              transactionError_ = new global::Kin.Agora.Common.V4.TransactionError();
            }
            input.ReadMessage(transactionError_);
            break;
          }
          case 34: {
            invoiceErrors_.AddEntriesFrom(input, _repeated_invoiceErrors_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SubmitTransactionResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("OK")] Ok = 0,
        /// <summary>
        /// Indicates that the transaction has already been submitted.
        ///
        /// If the client is retrying a submission due to a transient
        /// failure, then this can occur if the submission in a previous
        /// attempt was successful. Otherwise, it may indicate that the
        /// transcation is indistinguishable from a previous transaction
        /// (i.e. same block hash, sender, dest, and amount), and the client
        /// should use a different recent block hash and try again.
        /// </summary>
        [pbr::OriginalName("ALREADY_SUBMITTED")] AlreadySubmitted = 1,
        /// <summary>
        /// There was an issue with submitting the transaction
        /// to the underlying chain. Clients should retry with
        /// a rebuilt transaction in case there are temporal
        /// issues with the transaction, such as sequence number,
        /// or some other chain-specific errors. The detail of
        /// the error is present in the result xdr.
        /// </summary>
        [pbr::OriginalName("FAILED")] Failed = 2,
        /// <summary>
        /// Indicates that the configured webhook for this transaction
        /// rejected the transaction without a specified reason.
        /// </summary>
        [pbr::OriginalName("REJECTED")] Rejected = 3,
        /// <summary>
        /// Indicates there was an error with one or more of the
        /// supplied invoices.
        ///
        /// See: invoice_errors.
        /// </summary>
        [pbr::OriginalName("INVOICE_ERROR")] InvoiceError = 4,
        /// <summary>
        /// Payer required indicates that the submitted transaction does not contain
        /// a signature at for the transaction funder account (the account at the 0th index).
        ///
        /// This can occur if the service does not have a subsdizier configured, or if
        /// the service refuses to subsidize this specific transaction. The latter
        /// case can occur during rate limiting situations. In this case, the client
        /// may either retry at a later time, or attempt to fund the transaction some
        /// other way.
        /// </summary>
        [pbr::OriginalName("PAYER_REQUIRED")] PayerRequired = 5,
      }

    }
    #endregion

  }

  public sealed partial class GetTransactionRequest : pb::IMessage<GetTransactionRequest> {
    private static readonly pb::MessageParser<GetTransactionRequest> _parser = new pb::MessageParser<GetTransactionRequest>(() => new GetTransactionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTransactionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kin.Agora.Transaction.V4.TransactionServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionRequest(GetTransactionRequest other) : this() {
      transactionId_ = other.transactionId_ != null ? other.transactionId_.Clone() : null;
      commitment_ = other.commitment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionRequest Clone() {
      return new GetTransactionRequest(this);
    }

    /// <summary>Field number for the "transaction_id" field.</summary>
    public const int TransactionIdFieldNumber = 1;
    private global::Kin.Agora.Common.V4.TransactionId transactionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Common.V4.TransactionId TransactionId {
      get { return transactionId_; }
      set {
        transactionId_ = value;
      }
    }

    /// <summary>Field number for the "commitment" field.</summary>
    public const int CommitmentFieldNumber = 2;
    private global::Kin.Agora.Common.V4.Commitment commitment_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Common.V4.Commitment Commitment {
      get { return commitment_; }
      set {
        commitment_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTransactionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTransactionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TransactionId, other.TransactionId)) return false;
      if (Commitment != other.Commitment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transactionId_ != null) hash ^= TransactionId.GetHashCode();
      if (Commitment != 0) hash ^= Commitment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (transactionId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TransactionId);
      }
      if (Commitment != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Commitment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transactionId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransactionId);
      }
      if (Commitment != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Commitment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTransactionRequest other) {
      if (other == null) {
        return;
      }
      if (other.transactionId_ != null) {
        if (transactionId_ == null) {
          transactionId_ = new global::Kin.Agora.Common.V4.TransactionId();
        }
        TransactionId.MergeFrom(other.TransactionId);
      }
      if (other.Commitment != 0) {
        Commitment = other.Commitment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (transactionId_ == null) {
              transactionId_ = new global::Kin.Agora.Common.V4.TransactionId();
            }
            input.ReadMessage(transactionId_);
            break;
          }
          case 16: {
            commitment_ = (global::Kin.Agora.Common.V4.Commitment) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTransactionResponse : pb::IMessage<GetTransactionResponse> {
    private static readonly pb::MessageParser<GetTransactionResponse> _parser = new pb::MessageParser<GetTransactionResponse>(() => new GetTransactionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTransactionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kin.Agora.Transaction.V4.TransactionServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionResponse(GetTransactionResponse other) : this() {
      state_ = other.state_;
      slot_ = other.slot_;
      confirmations_ = other.confirmations_;
      item_ = other.item_ != null ? other.item_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionResponse Clone() {
      return new GetTransactionResponse(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private global::Kin.Agora.Transaction.V4.GetTransactionResponse.Types.State state_ = 0;
    /// <summary>
    /// The state of the transaction. The states are the same as
    /// SubmitTransaction, with the exception of UNKNOWN, which indicates
    /// that the system does not have a record of the transaction. This
    /// can occur if the transaction is still pending or if it has failed.
    ///
    /// If the transaction state is UNKNOWN for an extended period of
    /// time, it is likely that it was dropped. As a result, clients
    /// should limit the total times GetTransaction is called for a
    /// an UNKNOWN transaction.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Transaction.V4.GetTransactionResponse.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "slot" field.</summary>
    public const int SlotFieldNumber = 2;
    private ulong slot_;
    /// <summary>
    /// Non-zero when state == State::SUCCESS
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Slot {
      get { return slot_; }
      set {
        slot_ = value;
      }
    }

    /// <summary>Field number for the "confirmations" field.</summary>
    public const int ConfirmationsFieldNumber = 3;
    private uint confirmations_;
    /// <summary>
    /// The number of confirmations for the transaction.
    /// The value is irrelevant when state != State::PENDING.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Confirmations {
      get { return confirmations_; }
      set {
        confirmations_ = value;
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 4;
    private global::Kin.Agora.Transaction.V4.HistoryItem item_;
    /// <summary>
    /// Present when state == State::SUCCESS.
    /// May or may not be present in other cases.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Transaction.V4.HistoryItem Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTransactionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTransactionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if (Slot != other.Slot) return false;
      if (Confirmations != other.Confirmations) return false;
      if (!object.Equals(Item, other.Item)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (State != 0) hash ^= State.GetHashCode();
      if (Slot != 0UL) hash ^= Slot.GetHashCode();
      if (Confirmations != 0) hash ^= Confirmations.GetHashCode();
      if (item_ != null) hash ^= Item.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (State != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      if (Slot != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Slot);
      }
      if (Confirmations != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Confirmations);
      }
      if (item_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Item);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (Slot != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Slot);
      }
      if (Confirmations != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Confirmations);
      }
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTransactionResponse other) {
      if (other == null) {
        return;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.Slot != 0UL) {
        Slot = other.Slot;
      }
      if (other.Confirmations != 0) {
        Confirmations = other.Confirmations;
      }
      if (other.item_ != null) {
        if (item_ == null) {
          item_ = new global::Kin.Agora.Transaction.V4.HistoryItem();
        }
        Item.MergeFrom(other.Item);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            state_ = (global::Kin.Agora.Transaction.V4.GetTransactionResponse.Types.State) input.ReadEnum();
            break;
          }
          case 16: {
            Slot = input.ReadUInt64();
            break;
          }
          case 24: {
            Confirmations = input.ReadUInt32();
            break;
          }
          case 34: {
            if (item_ == null) {
              item_ = new global::Kin.Agora.Transaction.V4.HistoryItem();
            }
            input.ReadMessage(item_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetTransactionResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum State {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("FAILED")] Failed = 2,
        [pbr::OriginalName("PENDING")] Pending = 3,
      }

    }
    #endregion

  }

  public sealed partial class HistoryItem : pb::IMessage<HistoryItem> {
    private static readonly pb::MessageParser<HistoryItem> _parser = new pb::MessageParser<HistoryItem>(() => new HistoryItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HistoryItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kin.Agora.Transaction.V4.TransactionServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoryItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoryItem(HistoryItem other) : this() {
      transactionId_ = other.transactionId_ != null ? other.transactionId_.Clone() : null;
      cursor_ = other.cursor_ != null ? other.cursor_.Clone() : null;
      transactionError_ = other.transactionError_ != null ? other.transactionError_.Clone() : null;
      payments_ = other.payments_.Clone();
      invoiceList_ = other.invoiceList_ != null ? other.invoiceList_.Clone() : null;
      switch (other.RawTransactionCase) {
        case RawTransactionOneofCase.SolanaTransaction:
          SolanaTransaction = other.SolanaTransaction.Clone();
          break;
        case RawTransactionOneofCase.StellarTransaction:
          StellarTransaction = other.StellarTransaction.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoryItem Clone() {
      return new HistoryItem(this);
    }

    /// <summary>Field number for the "transaction_id" field.</summary>
    public const int TransactionIdFieldNumber = 1;
    private global::Kin.Agora.Common.V4.TransactionId transactionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Common.V4.TransactionId TransactionId {
      get { return transactionId_; }
      set {
        transactionId_ = value;
      }
    }

    /// <summary>Field number for the "cursor" field.</summary>
    public const int CursorFieldNumber = 2;
    private global::Kin.Agora.Transaction.V4.Cursor cursor_;
    /// <summary>
    /// The cursor position of this item.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Transaction.V4.Cursor Cursor {
      get { return cursor_; }
      set {
        cursor_ = value;
      }
    }

    /// <summary>Field number for the "solana_transaction" field.</summary>
    public const int SolanaTransactionFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Common.V4.Transaction SolanaTransaction {
      get { return rawTransactionCase_ == RawTransactionOneofCase.SolanaTransaction ? (global::Kin.Agora.Common.V4.Transaction) rawTransaction_ : null; }
      set {
        rawTransaction_ = value;
        rawTransactionCase_ = value == null ? RawTransactionOneofCase.None : RawTransactionOneofCase.SolanaTransaction;
      }
    }

    /// <summary>Field number for the "stellar_transaction" field.</summary>
    public const int StellarTransactionFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Common.V4.StellarTransaction StellarTransaction {
      get { return rawTransactionCase_ == RawTransactionOneofCase.StellarTransaction ? (global::Kin.Agora.Common.V4.StellarTransaction) rawTransaction_ : null; }
      set {
        rawTransaction_ = value;
        rawTransactionCase_ = value == null ? RawTransactionOneofCase.None : RawTransactionOneofCase.StellarTransaction;
      }
    }

    /// <summary>Field number for the "transaction_error" field.</summary>
    public const int TransactionErrorFieldNumber = 5;
    private global::Kin.Agora.Common.V4.TransactionError transactionError_;
    /// <summary>
    /// Present if the transaction failed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Common.V4.TransactionError TransactionError {
      get { return transactionError_; }
      set {
        transactionError_ = value;
      }
    }

    /// <summary>Field number for the "payments" field.</summary>
    public const int PaymentsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Kin.Agora.Transaction.V4.HistoryItem.Types.Payment> _repeated_payments_codec
        = pb::FieldCodec.ForMessage(50, global::Kin.Agora.Transaction.V4.HistoryItem.Types.Payment.Parser);
    private readonly pbc::RepeatedField<global::Kin.Agora.Transaction.V4.HistoryItem.Types.Payment> payments_ = new pbc::RepeatedField<global::Kin.Agora.Transaction.V4.HistoryItem.Types.Payment>();
    /// <summary>
    /// The set of payments contained in the raw_transaction.
    ///
    /// Payment is an abstract view over a StellarPayment or
    /// a Solana transfer. In the Stellar case, the Stellar
    /// accounts will be mapped to a SolanaAccountId.
    ///
    /// Note: A transaction _may_ not contain any transfers, in
    /// which case `payments` will be empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Kin.Agora.Transaction.V4.HistoryItem.Types.Payment> Payments {
      get { return payments_; }
    }

    /// <summary>Field number for the "invoice_list" field.</summary>
    public const int InvoiceListFieldNumber = 7;
    private global::Kin.Agora.Common.V3.InvoiceList invoiceList_;
    /// <summary>
    /// If an invoice list was submitted with the transaction, and the transaction
    /// was submitted via this instance of the service, this field will be set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Common.V3.InvoiceList InvoiceList {
      get { return invoiceList_; }
      set {
        invoiceList_ = value;
      }
    }

    private object rawTransaction_;
    /// <summary>Enum of possible cases for the "raw_transaction" oneof.</summary>
    public enum RawTransactionOneofCase {
      None = 0,
      SolanaTransaction = 3,
      StellarTransaction = 4,
    }
    private RawTransactionOneofCase rawTransactionCase_ = RawTransactionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RawTransactionOneofCase RawTransactionCase {
      get { return rawTransactionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRawTransaction() {
      rawTransactionCase_ = RawTransactionOneofCase.None;
      rawTransaction_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HistoryItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HistoryItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TransactionId, other.TransactionId)) return false;
      if (!object.Equals(Cursor, other.Cursor)) return false;
      if (!object.Equals(SolanaTransaction, other.SolanaTransaction)) return false;
      if (!object.Equals(StellarTransaction, other.StellarTransaction)) return false;
      if (!object.Equals(TransactionError, other.TransactionError)) return false;
      if(!payments_.Equals(other.payments_)) return false;
      if (!object.Equals(InvoiceList, other.InvoiceList)) return false;
      if (RawTransactionCase != other.RawTransactionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transactionId_ != null) hash ^= TransactionId.GetHashCode();
      if (cursor_ != null) hash ^= Cursor.GetHashCode();
      if (rawTransactionCase_ == RawTransactionOneofCase.SolanaTransaction) hash ^= SolanaTransaction.GetHashCode();
      if (rawTransactionCase_ == RawTransactionOneofCase.StellarTransaction) hash ^= StellarTransaction.GetHashCode();
      if (transactionError_ != null) hash ^= TransactionError.GetHashCode();
      hash ^= payments_.GetHashCode();
      if (invoiceList_ != null) hash ^= InvoiceList.GetHashCode();
      hash ^= (int) rawTransactionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (transactionId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TransactionId);
      }
      if (cursor_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Cursor);
      }
      if (rawTransactionCase_ == RawTransactionOneofCase.SolanaTransaction) {
        output.WriteRawTag(26);
        output.WriteMessage(SolanaTransaction);
      }
      if (rawTransactionCase_ == RawTransactionOneofCase.StellarTransaction) {
        output.WriteRawTag(34);
        output.WriteMessage(StellarTransaction);
      }
      if (transactionError_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(TransactionError);
      }
      payments_.WriteTo(output, _repeated_payments_codec);
      if (invoiceList_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(InvoiceList);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transactionId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransactionId);
      }
      if (cursor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cursor);
      }
      if (rawTransactionCase_ == RawTransactionOneofCase.SolanaTransaction) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SolanaTransaction);
      }
      if (rawTransactionCase_ == RawTransactionOneofCase.StellarTransaction) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StellarTransaction);
      }
      if (transactionError_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransactionError);
      }
      size += payments_.CalculateSize(_repeated_payments_codec);
      if (invoiceList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InvoiceList);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HistoryItem other) {
      if (other == null) {
        return;
      }
      if (other.transactionId_ != null) {
        if (transactionId_ == null) {
          transactionId_ = new global::Kin.Agora.Common.V4.TransactionId();
        }
        TransactionId.MergeFrom(other.TransactionId);
      }
      if (other.cursor_ != null) {
        if (cursor_ == null) {
          cursor_ = new global::Kin.Agora.Transaction.V4.Cursor();
        }
        Cursor.MergeFrom(other.Cursor);
      }
      if (other.transactionError_ != null) {
        if (transactionError_ == null) {
          transactionError_ = new global::Kin.Agora.Common.V4.TransactionError();
        }
        TransactionError.MergeFrom(other.TransactionError);
      }
      payments_.Add(other.payments_);
      if (other.invoiceList_ != null) {
        if (invoiceList_ == null) {
          invoiceList_ = new global::Kin.Agora.Common.V3.InvoiceList();
        }
        InvoiceList.MergeFrom(other.InvoiceList);
      }
      switch (other.RawTransactionCase) {
        case RawTransactionOneofCase.SolanaTransaction:
          if (SolanaTransaction == null) {
            SolanaTransaction = new global::Kin.Agora.Common.V4.Transaction();
          }
          SolanaTransaction.MergeFrom(other.SolanaTransaction);
          break;
        case RawTransactionOneofCase.StellarTransaction:
          if (StellarTransaction == null) {
            StellarTransaction = new global::Kin.Agora.Common.V4.StellarTransaction();
          }
          StellarTransaction.MergeFrom(other.StellarTransaction);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (transactionId_ == null) {
              transactionId_ = new global::Kin.Agora.Common.V4.TransactionId();
            }
            input.ReadMessage(transactionId_);
            break;
          }
          case 18: {
            if (cursor_ == null) {
              cursor_ = new global::Kin.Agora.Transaction.V4.Cursor();
            }
            input.ReadMessage(cursor_);
            break;
          }
          case 26: {
            global::Kin.Agora.Common.V4.Transaction subBuilder = new global::Kin.Agora.Common.V4.Transaction();
            if (rawTransactionCase_ == RawTransactionOneofCase.SolanaTransaction) {
              subBuilder.MergeFrom(SolanaTransaction);
            }
            input.ReadMessage(subBuilder);
            SolanaTransaction = subBuilder;
            break;
          }
          case 34: {
            global::Kin.Agora.Common.V4.StellarTransaction subBuilder = new global::Kin.Agora.Common.V4.StellarTransaction();
            if (rawTransactionCase_ == RawTransactionOneofCase.StellarTransaction) {
              subBuilder.MergeFrom(StellarTransaction);
            }
            input.ReadMessage(subBuilder);
            StellarTransaction = subBuilder;
            break;
          }
          case 42: {
            if (transactionError_ == null) {
              transactionError_ = new global::Kin.Agora.Common.V4.TransactionError();
            }
            input.ReadMessage(transactionError_);
            break;
          }
          case 50: {
            payments_.AddEntriesFrom(input, _repeated_payments_codec);
            break;
          }
          case 58: {
            if (invoiceList_ == null) {
              invoiceList_ = new global::Kin.Agora.Common.V3.InvoiceList();
            }
            input.ReadMessage(invoiceList_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the HistoryItem message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Payment : pb::IMessage<Payment> {
        private static readonly pb::MessageParser<Payment> _parser = new pb::MessageParser<Payment>(() => new Payment());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Payment> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Kin.Agora.Transaction.V4.HistoryItem.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Payment() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Payment(Payment other) : this() {
          source_ = other.source_ != null ? other.source_.Clone() : null;
          destination_ = other.destination_ != null ? other.destination_.Clone() : null;
          amount_ = other.amount_;
          index_ = other.index_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Payment Clone() {
          return new Payment(this);
        }

        /// <summary>Field number for the "source" field.</summary>
        public const int SourceFieldNumber = 1;
        private global::Kin.Agora.Common.V4.SolanaAccountId source_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Kin.Agora.Common.V4.SolanaAccountId Source {
          get { return source_; }
          set {
            source_ = value;
          }
        }

        /// <summary>Field number for the "destination" field.</summary>
        public const int DestinationFieldNumber = 2;
        private global::Kin.Agora.Common.V4.SolanaAccountId destination_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Kin.Agora.Common.V4.SolanaAccountId Destination {
          get { return destination_; }
          set {
            destination_ = value;
          }
        }

        /// <summary>Field number for the "amount" field.</summary>
        public const int AmountFieldNumber = 3;
        private long amount_;
        /// <summary>
        /// Amount in quarks
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Amount {
          get { return amount_; }
          set {
            amount_ = value;
          }
        }

        /// <summary>Field number for the "index" field.</summary>
        public const int IndexFieldNumber = 4;
        private uint index_;
        /// <summary>
        /// The index of the transfer within the transaction.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Index {
          get { return index_; }
          set {
            index_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Payment);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Payment other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Source, other.Source)) return false;
          if (!object.Equals(Destination, other.Destination)) return false;
          if (Amount != other.Amount) return false;
          if (Index != other.Index) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (source_ != null) hash ^= Source.GetHashCode();
          if (destination_ != null) hash ^= Destination.GetHashCode();
          if (Amount != 0L) hash ^= Amount.GetHashCode();
          if (Index != 0) hash ^= Index.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (source_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Source);
          }
          if (destination_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Destination);
          }
          if (Amount != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(Amount);
          }
          if (Index != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(Index);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (source_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Source);
          }
          if (destination_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Destination);
          }
          if (Amount != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
          }
          if (Index != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Payment other) {
          if (other == null) {
            return;
          }
          if (other.source_ != null) {
            if (source_ == null) {
              source_ = new global::Kin.Agora.Common.V4.SolanaAccountId();
            }
            Source.MergeFrom(other.Source);
          }
          if (other.destination_ != null) {
            if (destination_ == null) {
              destination_ = new global::Kin.Agora.Common.V4.SolanaAccountId();
            }
            Destination.MergeFrom(other.Destination);
          }
          if (other.Amount != 0L) {
            Amount = other.Amount;
          }
          if (other.Index != 0) {
            Index = other.Index;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (source_ == null) {
                  source_ = new global::Kin.Agora.Common.V4.SolanaAccountId();
                }
                input.ReadMessage(source_);
                break;
              }
              case 18: {
                if (destination_ == null) {
                  destination_ = new global::Kin.Agora.Common.V4.SolanaAccountId();
                }
                input.ReadMessage(destination_);
                break;
              }
              case 24: {
                Amount = input.ReadInt64();
                break;
              }
              case 32: {
                Index = input.ReadUInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class Cursor : pb::IMessage<Cursor> {
    private static readonly pb::MessageParser<Cursor> _parser = new pb::MessageParser<Cursor>(() => new Cursor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Cursor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kin.Agora.Transaction.V4.TransactionServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cursor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cursor(Cursor other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cursor Clone() {
      return new Cursor(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private pb::ByteString value_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Cursor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Cursor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Cursor other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
