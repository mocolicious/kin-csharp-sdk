// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: account/v4/account_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Kin.Agora.Account.V4 {

  /// <summary>Holder for reflection information generated from account/v4/account_service.proto</summary>
  public static partial class AccountServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for account/v4/account_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AccountServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBhY2NvdW50L3Y0L2FjY291bnRfc2VydmljZS5wcm90bxIUa2luLmFnb3Jh",
            "LmFjY291bnQudjQaFWNvbW1vbi92NC9tb2RlbC5wcm90byJYCgtBY2NvdW50",
            "SW5mbxI4CgphY2NvdW50X2lkGAEgASgLMiQua2luLmFnb3JhLmNvbW1vbi52",
            "NC5Tb2xhbmFBY2NvdW50SWQSDwoHYmFsYW5jZRgCIAEoAyKCAQoUQ3JlYXRl",
            "QWNjb3VudFJlcXVlc3QSNQoLdHJhbnNhY3Rpb24YASABKAsyIC5raW4uYWdv",
            "cmEuY29tbW9uLnY0LlRyYW5zYWN0aW9uEjMKCmNvbW1pdG1lbnQYAiABKA4y",
            "Hy5raW4uYWdvcmEuY29tbW9uLnY0LkNvbW1pdG1lbnQi1QEKFUNyZWF0ZUFj",
            "Y291bnRSZXNwb25zZRJCCgZyZXN1bHQYASABKA4yMi5raW4uYWdvcmEuYWNj",
            "b3VudC52NC5DcmVhdGVBY2NvdW50UmVzcG9uc2UuUmVzdWx0EjcKDGFjY291",
            "bnRfaW5mbxgCIAEoCzIhLmtpbi5hZ29yYS5hY2NvdW50LnY0LkFjY291bnRJ",
            "bmZvIj8KBlJlc3VsdBIGCgJPSxAAEgoKBkVYSVNUUxABEhIKDlBBWUVSX1JF",
            "UVVJUkVEEAISDQoJQkFEX05PTkNFEAMihgEKFUdldEFjY291bnRJbmZvUmVx",
            "dWVzdBI4CgphY2NvdW50X2lkGAEgASgLMiQua2luLmFnb3JhLmNvbW1vbi52",
            "NC5Tb2xhbmFBY2NvdW50SWQSMwoKY29tbWl0bWVudBgCIAEoDjIfLmtpbi5h",
            "Z29yYS5jb21tb24udjQuQ29tbWl0bWVudCK3AQoWR2V0QWNjb3VudEluZm9S",
            "ZXNwb25zZRJDCgZyZXN1bHQYASABKA4yMy5raW4uYWdvcmEuYWNjb3VudC52",
            "NC5HZXRBY2NvdW50SW5mb1Jlc3BvbnNlLlJlc3VsdBI3CgxhY2NvdW50X2lu",
            "Zm8YAiABKAsyIS5raW4uYWdvcmEuYWNjb3VudC52NC5BY2NvdW50SW5mbyIf",
            "CgZSZXN1bHQSBgoCT0sQABINCglOT1RfRk9VTkQQASJXChtSZXNvbHZlVG9r",
            "ZW5BY2NvdW50c1JlcXVlc3QSOAoKYWNjb3VudF9pZBgBIAEoCzIkLmtpbi5h",
            "Z29yYS5jb21tb24udjQuU29sYW5hQWNjb3VudElkIlwKHFJlc29sdmVUb2tl",
            "bkFjY291bnRzUmVzcG9uc2USPAoOdG9rZW5fYWNjb3VudHMYASADKAsyJC5r",
            "aW4uYWdvcmEuY29tbW9uLnY0LlNvbGFuYUFjY291bnRJZCJMChBHZXRFdmVu",
            "dHNSZXF1ZXN0EjgKCmFjY291bnRfaWQYASABKAsyJC5raW4uYWdvcmEuY29t",
            "bW9uLnY0LlNvbGFuYUFjY291bnRJZCKLAQoGRXZlbnRzEjMKBnJlc3VsdBgB",
            "IAEoDjIjLmtpbi5hZ29yYS5hY2NvdW50LnY0LkV2ZW50cy5SZXN1bHQSKwoG",
            "ZXZlbnRzGAIgAygLMhsua2luLmFnb3JhLmFjY291bnQudjQuRXZlbnQiHwoG",
            "UmVzdWx0EgYKAk9LEAASDQoJTk9UX0ZPVU5EEAEingEKBUV2ZW50EkgKFGFj",
            "Y291bnRfdXBkYXRlX2V2ZW50GAEgASgLMigua2luLmFnb3JhLmFjY291bnQu",
            "djQuQWNjb3VudFVwZGF0ZUV2ZW50SAASQwoRdHJhbnNhY3Rpb25fZXZlbnQY",
            "AiABKAsyJi5raW4uYWdvcmEuYWNjb3VudC52NC5UcmFuc2FjdGlvbkV2ZW50",
            "SABCBgoEdHlwZSJNChJBY2NvdW50VXBkYXRlRXZlbnQSNwoMYWNjb3VudF9p",
            "bmZvGAEgASgLMiEua2luLmFnb3JhLmFjY291bnQudjQuQWNjb3VudEluZm8i",
            "iwEKEFRyYW5zYWN0aW9uRXZlbnQSNQoLdHJhbnNhY3Rpb24YASABKAsyIC5r",
            "aW4uYWdvcmEuY29tbW9uLnY0LlRyYW5zYWN0aW9uEkAKEXRyYW5zYWN0aW9u",
            "X2Vycm9yGAIgASgLMiUua2luLmFnb3JhLmNvbW1vbi52NC5UcmFuc2FjdGlv",
            "bkVycm9yMrQDCgdBY2NvdW50EmgKDUNyZWF0ZUFjY291bnQSKi5raW4uYWdv",
            "cmEuYWNjb3VudC52NC5DcmVhdGVBY2NvdW50UmVxdWVzdBorLmtpbi5hZ29y",
            "YS5hY2NvdW50LnY0LkNyZWF0ZUFjY291bnRSZXNwb25zZRJrCg5HZXRBY2Nv",
            "dW50SW5mbxIrLmtpbi5hZ29yYS5hY2NvdW50LnY0LkdldEFjY291bnRJbmZv",
            "UmVxdWVzdBosLmtpbi5hZ29yYS5hY2NvdW50LnY0LkdldEFjY291bnRJbmZv",
            "UmVzcG9uc2USfQoUUmVzb2x2ZVRva2VuQWNjb3VudHMSMS5raW4uYWdvcmEu",
            "YWNjb3VudC52NC5SZXNvbHZlVG9rZW5BY2NvdW50c1JlcXVlc3QaMi5raW4u",
            "YWdvcmEuYWNjb3VudC52NC5SZXNvbHZlVG9rZW5BY2NvdW50c1Jlc3BvbnNl",
            "ElMKCUdldEV2ZW50cxImLmtpbi5hZ29yYS5hY2NvdW50LnY0LkdldEV2ZW50",
            "c1JlcXVlc3QaHC5raW4uYWdvcmEuYWNjb3VudC52NC5FdmVudHMwAUJ1Chxv",
            "cmcua2luLmFnb3JhLmdlbi5hY2NvdW50LnY0WkZnaXRodWIuY29tL2tpbmVj",
            "b3N5c3RlbS9hZ29yYS1hcGktaW50ZXJuYWwvZ2VucHJvdG8vYWNjb3VudC92",
            "NDthY2NvdW50ogIMQVBCQWNjb3VudFY0YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Kin.Agora.Common.V4.ModelReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Account.V4.AccountInfo), global::Kin.Agora.Account.V4.AccountInfo.Parser, new[]{ "AccountId", "Balance" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Account.V4.CreateAccountRequest), global::Kin.Agora.Account.V4.CreateAccountRequest.Parser, new[]{ "Transaction", "Commitment" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Account.V4.CreateAccountResponse), global::Kin.Agora.Account.V4.CreateAccountResponse.Parser, new[]{ "Result", "AccountInfo" }, null, new[]{ typeof(global::Kin.Agora.Account.V4.CreateAccountResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Account.V4.GetAccountInfoRequest), global::Kin.Agora.Account.V4.GetAccountInfoRequest.Parser, new[]{ "AccountId", "Commitment" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Account.V4.GetAccountInfoResponse), global::Kin.Agora.Account.V4.GetAccountInfoResponse.Parser, new[]{ "Result", "AccountInfo" }, null, new[]{ typeof(global::Kin.Agora.Account.V4.GetAccountInfoResponse.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Account.V4.ResolveTokenAccountsRequest), global::Kin.Agora.Account.V4.ResolveTokenAccountsRequest.Parser, new[]{ "AccountId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Account.V4.ResolveTokenAccountsResponse), global::Kin.Agora.Account.V4.ResolveTokenAccountsResponse.Parser, new[]{ "TokenAccounts" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Account.V4.GetEventsRequest), global::Kin.Agora.Account.V4.GetEventsRequest.Parser, new[]{ "AccountId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Account.V4.Events), global::Kin.Agora.Account.V4.Events.Parser, new[]{ "Result", "Events_" }, null, new[]{ typeof(global::Kin.Agora.Account.V4.Events.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Account.V4.Event), global::Kin.Agora.Account.V4.Event.Parser, new[]{ "AccountUpdateEvent", "TransactionEvent" }, new[]{ "Type" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Account.V4.AccountUpdateEvent), global::Kin.Agora.Account.V4.AccountUpdateEvent.Parser, new[]{ "AccountInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Kin.Agora.Account.V4.TransactionEvent), global::Kin.Agora.Account.V4.TransactionEvent.Parser, new[]{ "Transaction", "TransactionError" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AccountInfo : pb::IMessage<AccountInfo> {
    private static readonly pb::MessageParser<AccountInfo> _parser = new pb::MessageParser<AccountInfo>(() => new AccountInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kin.Agora.Account.V4.AccountServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountInfo(AccountInfo other) : this() {
      accountId_ = other.accountId_ != null ? other.accountId_.Clone() : null;
      balance_ = other.balance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountInfo Clone() {
      return new AccountInfo(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private global::Kin.Agora.Common.V4.SolanaAccountId accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Common.V4.SolanaAccountId AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 2;
    private long balance_;
    /// <summary>
    /// The last known balance, in quarks, of the account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Balance {
      get { return balance_; }
      set {
        balance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AccountId, other.AccountId)) return false;
      if (Balance != other.Balance) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (accountId_ != null) hash ^= AccountId.GetHashCode();
      if (Balance != 0L) hash ^= Balance.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (accountId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AccountId);
      }
      if (Balance != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Balance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (accountId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountId);
      }
      if (Balance != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Balance);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountInfo other) {
      if (other == null) {
        return;
      }
      if (other.accountId_ != null) {
        if (accountId_ == null) {
          accountId_ = new global::Kin.Agora.Common.V4.SolanaAccountId();
        }
        AccountId.MergeFrom(other.AccountId);
      }
      if (other.Balance != 0L) {
        Balance = other.Balance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (accountId_ == null) {
              accountId_ = new global::Kin.Agora.Common.V4.SolanaAccountId();
            }
            input.ReadMessage(accountId_);
            break;
          }
          case 16: {
            Balance = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateAccountRequest : pb::IMessage<CreateAccountRequest> {
    private static readonly pb::MessageParser<CreateAccountRequest> _parser = new pb::MessageParser<CreateAccountRequest>(() => new CreateAccountRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kin.Agora.Account.V4.AccountServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAccountRequest(CreateAccountRequest other) : this() {
      transaction_ = other.transaction_ != null ? other.transaction_.Clone() : null;
      commitment_ = other.commitment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAccountRequest Clone() {
      return new CreateAccountRequest(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 1;
    private global::Kin.Agora.Common.V4.Transaction transaction_;
    /// <summary>
    /// Transaction should contain the following instructions:
    ///
    ///   1. SystemProgram::CreateAccount()
    ///   2. SplTokenProgram::InitializeAccount()
    ///   3. SplTokenProgram::SetAuthority()
    ///
    /// (3) only needs to be set if the service is subsidizing the
    /// account creation. In that case, a SetAuthority() instruction
    /// should be included that sets the CloseAuthority of the account
    /// to the subsidizer. This is to prevent farming of Sol by creating
    /// accounts. It should be noted that an account can only be closed
    /// if there is zero kin in the account.
    ///
    /// If the parameters are not for the Kin token, or there are
    /// any other instructions, InvalidArgument will be returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Common.V4.Transaction Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    /// <summary>Field number for the "commitment" field.</summary>
    public const int CommitmentFieldNumber = 2;
    private global::Kin.Agora.Common.V4.Commitment commitment_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Common.V4.Commitment Commitment {
      get { return commitment_; }
      set {
        commitment_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Transaction, other.Transaction)) return false;
      if (Commitment != other.Commitment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (Commitment != 0) hash ^= Commitment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (transaction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Transaction);
      }
      if (Commitment != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Commitment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (Commitment != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Commitment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          transaction_ = new global::Kin.Agora.Common.V4.Transaction();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      if (other.Commitment != 0) {
        Commitment = other.Commitment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (transaction_ == null) {
              transaction_ = new global::Kin.Agora.Common.V4.Transaction();
            }
            input.ReadMessage(transaction_);
            break;
          }
          case 16: {
            commitment_ = (global::Kin.Agora.Common.V4.Commitment) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateAccountResponse : pb::IMessage<CreateAccountResponse> {
    private static readonly pb::MessageParser<CreateAccountResponse> _parser = new pb::MessageParser<CreateAccountResponse>(() => new CreateAccountResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateAccountResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kin.Agora.Account.V4.AccountServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAccountResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAccountResponse(CreateAccountResponse other) : this() {
      result_ = other.result_;
      accountInfo_ = other.accountInfo_ != null ? other.accountInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAccountResponse Clone() {
      return new CreateAccountResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::Kin.Agora.Account.V4.CreateAccountResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Account.V4.CreateAccountResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "account_info" field.</summary>
    public const int AccountInfoFieldNumber = 2;
    private global::Kin.Agora.Account.V4.AccountInfo accountInfo_;
    /// <summary>
    /// Present iff the account was created or already existed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Account.V4.AccountInfo AccountInfo {
      get { return accountInfo_; }
      set {
        accountInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateAccountResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateAccountResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(AccountInfo, other.AccountInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (accountInfo_ != null) hash ^= AccountInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (accountInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AccountInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (accountInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateAccountResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.accountInfo_ != null) {
        if (accountInfo_ == null) {
          accountInfo_ = new global::Kin.Agora.Account.V4.AccountInfo();
        }
        AccountInfo.MergeFrom(other.AccountInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            result_ = (global::Kin.Agora.Account.V4.CreateAccountResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            if (accountInfo_ == null) {
              accountInfo_ = new global::Kin.Agora.Account.V4.AccountInfo();
            }
            input.ReadMessage(accountInfo_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CreateAccountResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("OK")] Ok = 0,
        [pbr::OriginalName("EXISTS")] Exists = 1,
        /// <summary>
        /// Indicates that the service will not subsidize the transaction, and that
        /// the caller should fund the transaction themselves.
        /// </summary>
        [pbr::OriginalName("PAYER_REQUIRED")] PayerRequired = 2,
        /// <summary>
        /// Indicates the nonce/blockhash used in the transaction is invalid, and should
        /// be refetched
        /// </summary>
        [pbr::OriginalName("BAD_NONCE")] BadNonce = 3,
      }

    }
    #endregion

  }

  public sealed partial class GetAccountInfoRequest : pb::IMessage<GetAccountInfoRequest> {
    private static readonly pb::MessageParser<GetAccountInfoRequest> _parser = new pb::MessageParser<GetAccountInfoRequest>(() => new GetAccountInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccountInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kin.Agora.Account.V4.AccountServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountInfoRequest(GetAccountInfoRequest other) : this() {
      accountId_ = other.accountId_ != null ? other.accountId_.Clone() : null;
      commitment_ = other.commitment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountInfoRequest Clone() {
      return new GetAccountInfoRequest(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private global::Kin.Agora.Common.V4.SolanaAccountId accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Common.V4.SolanaAccountId AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }

    /// <summary>Field number for the "commitment" field.</summary>
    public const int CommitmentFieldNumber = 2;
    private global::Kin.Agora.Common.V4.Commitment commitment_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Common.V4.Commitment Commitment {
      get { return commitment_; }
      set {
        commitment_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccountInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccountInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AccountId, other.AccountId)) return false;
      if (Commitment != other.Commitment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (accountId_ != null) hash ^= AccountId.GetHashCode();
      if (Commitment != 0) hash ^= Commitment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (accountId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AccountId);
      }
      if (Commitment != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Commitment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (accountId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountId);
      }
      if (Commitment != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Commitment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccountInfoRequest other) {
      if (other == null) {
        return;
      }
      if (other.accountId_ != null) {
        if (accountId_ == null) {
          accountId_ = new global::Kin.Agora.Common.V4.SolanaAccountId();
        }
        AccountId.MergeFrom(other.AccountId);
      }
      if (other.Commitment != 0) {
        Commitment = other.Commitment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (accountId_ == null) {
              accountId_ = new global::Kin.Agora.Common.V4.SolanaAccountId();
            }
            input.ReadMessage(accountId_);
            break;
          }
          case 16: {
            commitment_ = (global::Kin.Agora.Common.V4.Commitment) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAccountInfoResponse : pb::IMessage<GetAccountInfoResponse> {
    private static readonly pb::MessageParser<GetAccountInfoResponse> _parser = new pb::MessageParser<GetAccountInfoResponse>(() => new GetAccountInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccountInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kin.Agora.Account.V4.AccountServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountInfoResponse(GetAccountInfoResponse other) : this() {
      result_ = other.result_;
      accountInfo_ = other.accountInfo_ != null ? other.accountInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountInfoResponse Clone() {
      return new GetAccountInfoResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::Kin.Agora.Account.V4.GetAccountInfoResponse.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Account.V4.GetAccountInfoResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "account_info" field.</summary>
    public const int AccountInfoFieldNumber = 2;
    private global::Kin.Agora.Account.V4.AccountInfo accountInfo_;
    /// <summary>
    /// Present iff result == Result::OK
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Account.V4.AccountInfo AccountInfo {
      get { return accountInfo_; }
      set {
        accountInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccountInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccountInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(AccountInfo, other.AccountInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (accountInfo_ != null) hash ^= AccountInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (accountInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AccountInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (accountInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccountInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.accountInfo_ != null) {
        if (accountInfo_ == null) {
          accountInfo_ = new global::Kin.Agora.Account.V4.AccountInfo();
        }
        AccountInfo.MergeFrom(other.AccountInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            result_ = (global::Kin.Agora.Account.V4.GetAccountInfoResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            if (accountInfo_ == null) {
              accountInfo_ = new global::Kin.Agora.Account.V4.AccountInfo();
            }
            input.ReadMessage(accountInfo_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetAccountInfoResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("OK")] Ok = 0,
        /// <summary>
        /// The specified account could not be found.
        /// </summary>
        [pbr::OriginalName("NOT_FOUND")] NotFound = 1,
      }

    }
    #endregion

  }

  public sealed partial class ResolveTokenAccountsRequest : pb::IMessage<ResolveTokenAccountsRequest> {
    private static readonly pb::MessageParser<ResolveTokenAccountsRequest> _parser = new pb::MessageParser<ResolveTokenAccountsRequest>(() => new ResolveTokenAccountsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResolveTokenAccountsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kin.Agora.Account.V4.AccountServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResolveTokenAccountsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResolveTokenAccountsRequest(ResolveTokenAccountsRequest other) : this() {
      accountId_ = other.accountId_ != null ? other.accountId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResolveTokenAccountsRequest Clone() {
      return new ResolveTokenAccountsRequest(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private global::Kin.Agora.Common.V4.SolanaAccountId accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Common.V4.SolanaAccountId AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResolveTokenAccountsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResolveTokenAccountsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AccountId, other.AccountId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (accountId_ != null) hash ^= AccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (accountId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (accountId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResolveTokenAccountsRequest other) {
      if (other == null) {
        return;
      }
      if (other.accountId_ != null) {
        if (accountId_ == null) {
          accountId_ = new global::Kin.Agora.Common.V4.SolanaAccountId();
        }
        AccountId.MergeFrom(other.AccountId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (accountId_ == null) {
              accountId_ = new global::Kin.Agora.Common.V4.SolanaAccountId();
            }
            input.ReadMessage(accountId_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResolveTokenAccountsResponse : pb::IMessage<ResolveTokenAccountsResponse> {
    private static readonly pb::MessageParser<ResolveTokenAccountsResponse> _parser = new pb::MessageParser<ResolveTokenAccountsResponse>(() => new ResolveTokenAccountsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResolveTokenAccountsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kin.Agora.Account.V4.AccountServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResolveTokenAccountsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResolveTokenAccountsResponse(ResolveTokenAccountsResponse other) : this() {
      tokenAccounts_ = other.tokenAccounts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResolveTokenAccountsResponse Clone() {
      return new ResolveTokenAccountsResponse(this);
    }

    /// <summary>Field number for the "token_accounts" field.</summary>
    public const int TokenAccountsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Kin.Agora.Common.V4.SolanaAccountId> _repeated_tokenAccounts_codec
        = pb::FieldCodec.ForMessage(10, global::Kin.Agora.Common.V4.SolanaAccountId.Parser);
    private readonly pbc::RepeatedField<global::Kin.Agora.Common.V4.SolanaAccountId> tokenAccounts_ = new pbc::RepeatedField<global::Kin.Agora.Common.V4.SolanaAccountId>();
    /// <summary>
    /// Zero or more accounts that are owned by the provided account id.
    ///
    /// If the provided account is also a token account, it will be first in the list.
    /// Otherwise, the list order should not be depended on, as there is no reliable way
    /// to sort accounts based on creation time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Kin.Agora.Common.V4.SolanaAccountId> TokenAccounts {
      get { return tokenAccounts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResolveTokenAccountsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResolveTokenAccountsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tokenAccounts_.Equals(other.tokenAccounts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tokenAccounts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      tokenAccounts_.WriteTo(output, _repeated_tokenAccounts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += tokenAccounts_.CalculateSize(_repeated_tokenAccounts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResolveTokenAccountsResponse other) {
      if (other == null) {
        return;
      }
      tokenAccounts_.Add(other.tokenAccounts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tokenAccounts_.AddEntriesFrom(input, _repeated_tokenAccounts_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetEventsRequest : pb::IMessage<GetEventsRequest> {
    private static readonly pb::MessageParser<GetEventsRequest> _parser = new pb::MessageParser<GetEventsRequest>(() => new GetEventsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetEventsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kin.Agora.Account.V4.AccountServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEventsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEventsRequest(GetEventsRequest other) : this() {
      accountId_ = other.accountId_ != null ? other.accountId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEventsRequest Clone() {
      return new GetEventsRequest(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private global::Kin.Agora.Common.V4.SolanaAccountId accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Common.V4.SolanaAccountId AccountId {
      get { return accountId_; }
      set {
        accountId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetEventsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetEventsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AccountId, other.AccountId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (accountId_ != null) hash ^= AccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (accountId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (accountId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetEventsRequest other) {
      if (other == null) {
        return;
      }
      if (other.accountId_ != null) {
        if (accountId_ == null) {
          accountId_ = new global::Kin.Agora.Common.V4.SolanaAccountId();
        }
        AccountId.MergeFrom(other.AccountId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (accountId_ == null) {
              accountId_ = new global::Kin.Agora.Common.V4.SolanaAccountId();
            }
            input.ReadMessage(accountId_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Events : pb::IMessage<Events> {
    private static readonly pb::MessageParser<Events> _parser = new pb::MessageParser<Events>(() => new Events());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Events> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kin.Agora.Account.V4.AccountServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Events() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Events(Events other) : this() {
      result_ = other.result_;
      events_ = other.events_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Events Clone() {
      return new Events(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::Kin.Agora.Account.V4.Events.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Account.V4.Events.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int Events_FieldNumber = 2;
    private static readonly pb::FieldCodec<global::Kin.Agora.Account.V4.Event> _repeated_events_codec
        = pb::FieldCodec.ForMessage(18, global::Kin.Agora.Account.V4.Event.Parser);
    private readonly pbc::RepeatedField<global::Kin.Agora.Account.V4.Event> events_ = new pbc::RepeatedField<global::Kin.Agora.Account.V4.Event>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Kin.Agora.Account.V4.Event> Events_ {
      get { return events_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Events);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Events other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if(!events_.Equals(other.events_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      hash ^= events_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      events_.WriteTo(output, _repeated_events_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      size += events_.CalculateSize(_repeated_events_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Events other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      events_.Add(other.events_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            result_ = (global::Kin.Agora.Account.V4.Events.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Events message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("OK")] Ok = 0,
        /// <summary>
        /// The specified account could not be found.
        /// </summary>
        [pbr::OriginalName("NOT_FOUND")] NotFound = 1,
      }

    }
    #endregion

  }

  public sealed partial class Event : pb::IMessage<Event> {
    private static readonly pb::MessageParser<Event> _parser = new pb::MessageParser<Event>(() => new Event());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kin.Agora.Account.V4.AccountServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event(Event other) : this() {
      switch (other.TypeCase) {
        case TypeOneofCase.AccountUpdateEvent:
          AccountUpdateEvent = other.AccountUpdateEvent.Clone();
          break;
        case TypeOneofCase.TransactionEvent:
          TransactionEvent = other.TransactionEvent.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event Clone() {
      return new Event(this);
    }

    /// <summary>Field number for the "account_update_event" field.</summary>
    public const int AccountUpdateEventFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Account.V4.AccountUpdateEvent AccountUpdateEvent {
      get { return typeCase_ == TypeOneofCase.AccountUpdateEvent ? (global::Kin.Agora.Account.V4.AccountUpdateEvent) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.AccountUpdateEvent;
      }
    }

    /// <summary>Field number for the "transaction_event" field.</summary>
    public const int TransactionEventFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Account.V4.TransactionEvent TransactionEvent {
      get { return typeCase_ == TypeOneofCase.TransactionEvent ? (global::Kin.Agora.Account.V4.TransactionEvent) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.TransactionEvent;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      AccountUpdateEvent = 1,
      TransactionEvent = 2,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AccountUpdateEvent, other.AccountUpdateEvent)) return false;
      if (!object.Equals(TransactionEvent, other.TransactionEvent)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeCase_ == TypeOneofCase.AccountUpdateEvent) hash ^= AccountUpdateEvent.GetHashCode();
      if (typeCase_ == TypeOneofCase.TransactionEvent) hash ^= TransactionEvent.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (typeCase_ == TypeOneofCase.AccountUpdateEvent) {
        output.WriteRawTag(10);
        output.WriteMessage(AccountUpdateEvent);
      }
      if (typeCase_ == TypeOneofCase.TransactionEvent) {
        output.WriteRawTag(18);
        output.WriteMessage(TransactionEvent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeCase_ == TypeOneofCase.AccountUpdateEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountUpdateEvent);
      }
      if (typeCase_ == TypeOneofCase.TransactionEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransactionEvent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event other) {
      if (other == null) {
        return;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.AccountUpdateEvent:
          if (AccountUpdateEvent == null) {
            AccountUpdateEvent = new global::Kin.Agora.Account.V4.AccountUpdateEvent();
          }
          AccountUpdateEvent.MergeFrom(other.AccountUpdateEvent);
          break;
        case TypeOneofCase.TransactionEvent:
          if (TransactionEvent == null) {
            TransactionEvent = new global::Kin.Agora.Account.V4.TransactionEvent();
          }
          TransactionEvent.MergeFrom(other.TransactionEvent);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Kin.Agora.Account.V4.AccountUpdateEvent subBuilder = new global::Kin.Agora.Account.V4.AccountUpdateEvent();
            if (typeCase_ == TypeOneofCase.AccountUpdateEvent) {
              subBuilder.MergeFrom(AccountUpdateEvent);
            }
            input.ReadMessage(subBuilder);
            AccountUpdateEvent = subBuilder;
            break;
          }
          case 18: {
            global::Kin.Agora.Account.V4.TransactionEvent subBuilder = new global::Kin.Agora.Account.V4.TransactionEvent();
            if (typeCase_ == TypeOneofCase.TransactionEvent) {
              subBuilder.MergeFrom(TransactionEvent);
            }
            input.ReadMessage(subBuilder);
            TransactionEvent = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// An event that gets sent when an account's information has changed.
  /// </summary>
  public sealed partial class AccountUpdateEvent : pb::IMessage<AccountUpdateEvent> {
    private static readonly pb::MessageParser<AccountUpdateEvent> _parser = new pb::MessageParser<AccountUpdateEvent>(() => new AccountUpdateEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountUpdateEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kin.Agora.Account.V4.AccountServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountUpdateEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountUpdateEvent(AccountUpdateEvent other) : this() {
      accountInfo_ = other.accountInfo_ != null ? other.accountInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountUpdateEvent Clone() {
      return new AccountUpdateEvent(this);
    }

    /// <summary>Field number for the "account_info" field.</summary>
    public const int AccountInfoFieldNumber = 1;
    private global::Kin.Agora.Account.V4.AccountInfo accountInfo_;
    /// <summary>
    /// The account information most recently obtained by the service.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Account.V4.AccountInfo AccountInfo {
      get { return accountInfo_; }
      set {
        accountInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountUpdateEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountUpdateEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AccountInfo, other.AccountInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (accountInfo_ != null) hash ^= AccountInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (accountInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AccountInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (accountInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountUpdateEvent other) {
      if (other == null) {
        return;
      }
      if (other.accountInfo_ != null) {
        if (accountInfo_ == null) {
          accountInfo_ = new global::Kin.Agora.Account.V4.AccountInfo();
        }
        AccountInfo.MergeFrom(other.AccountInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (accountInfo_ == null) {
              accountInfo_ = new global::Kin.Agora.Account.V4.AccountInfo();
            }
            input.ReadMessage(accountInfo_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// An event that gets sent when a transaction related to an account has been
  /// successfully submitted to the blockchain.
  /// </summary>
  public sealed partial class TransactionEvent : pb::IMessage<TransactionEvent> {
    private static readonly pb::MessageParser<TransactionEvent> _parser = new pb::MessageParser<TransactionEvent>(() => new TransactionEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Kin.Agora.Account.V4.AccountServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionEvent(TransactionEvent other) : this() {
      transaction_ = other.transaction_ != null ? other.transaction_.Clone() : null;
      transactionError_ = other.transactionError_ != null ? other.transactionError_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionEvent Clone() {
      return new TransactionEvent(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 1;
    private global::Kin.Agora.Common.V4.Transaction transaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Common.V4.Transaction Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    /// <summary>Field number for the "transaction_error" field.</summary>
    public const int TransactionErrorFieldNumber = 2;
    private global::Kin.Agora.Common.V4.TransactionError transactionError_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Kin.Agora.Common.V4.TransactionError TransactionError {
      get { return transactionError_; }
      set {
        transactionError_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Transaction, other.Transaction)) return false;
      if (!object.Equals(TransactionError, other.TransactionError)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (transactionError_ != null) hash ^= TransactionError.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (transaction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Transaction);
      }
      if (transactionError_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TransactionError);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (transactionError_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransactionError);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionEvent other) {
      if (other == null) {
        return;
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          transaction_ = new global::Kin.Agora.Common.V4.Transaction();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      if (other.transactionError_ != null) {
        if (transactionError_ == null) {
          transactionError_ = new global::Kin.Agora.Common.V4.TransactionError();
        }
        TransactionError.MergeFrom(other.TransactionError);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (transaction_ == null) {
              transaction_ = new global::Kin.Agora.Common.V4.Transaction();
            }
            input.ReadMessage(transaction_);
            break;
          }
          case 18: {
            if (transactionError_ == null) {
              transactionError_ = new global::Kin.Agora.Common.V4.TransactionError();
            }
            input.ReadMessage(transactionError_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
